exit
@time
exit
Status.find(params[:id])
Status.find(params[:id')
params[:id]
@status
exit
@time.to_date
@events
exit
@time
exit
@time
exit
@events
exit
@components
exit
@starts_ats = @events.pluck(:id,:starts_at).map{|a| a[0]}
@starts_ats = @events.pluck(:id,:starts_at).map{|a| a}
@starts_ats = @events.pluck(:id,:starts_at).map{|a|}
@starts_ats = @events.pluck(:id,:starts_at)
@starts_ats = @events.pluck(, :id:starts_at)
@events
@time
exit
@time.localtime.beginning_of_day
@time.localtime
@time.localltime
@time.loacltime
@time
exit
Time.parse("#{params[:starts_at_hour]}:#{params[:starts_at_minutes]}").to_formatted_s(:time)
Time.parse("#{params[:starts_at_hour]}:#{params[:starts_at_minutes]}")..to_formatted_s(:time)
Time.parse("#{params[:starts_at_hour]}:#{params[:starts_at_minutes]}")
Time.parse(Time.parse("#{params[:starts_at_hour]}:#{params[:starts_at_minutes]}"))
params
exit
@time.beginning_of_day
beginning_of_day(@time)
@time.class.name
@time
exit
Time.at(params['unix_time'].to_i / 1000)
Time.at(params['unix_time'].to_f)
Time.at(1546097282)
Time.at(628232400)
Time.at(params['unix_time'].to_i)
params['unix_time'].to_i
params['unix_time']
params
